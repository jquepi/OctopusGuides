name: ASP.NET Core TeamCity Octopus Built-in Feed Video
on:
#  push:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron:  '0 0 13,28 * *'
jobs:
  build:
    if: >-
      (github.event_name != 'repository_dispatch') ||
      (github.event.client_payload.workflow == github.workflow) ||
      (github.event.client_payload.workflow == 'all') ||
      (github.event.client_payload.workflow == 'teamcity-aspnetcore-video')
    runs-on: windows-2019
    env:
      STEP_PAUSE: 1000
      SLACK_STEP_HANDLER: true
      SLACK_ON_ERROR_ONLY: true
      BUILD_NAME: "aspnetcore-app-git-teamcity-builtin-iis"
      SMTP_PASSWORD: ${{ secrets.GMAIL_PASSWORD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      SLACK_HOOK_URL: ${{ secrets.SLACK_PRIVATE_HOOK_URL_3 }}
      WISTIA_USERNAME: ${{ secrets.WISTIA_USERNAME }}
      WISTIA_PASSWORD: ${{ secrets.WISTIA_PASSWORD }}
      MEDIA_PATH: C:\screenshots
      CUCUMBER_TAGS: >-
        (not @browserspecific or @firefox) and
        (not @destinationspecific or @iis) and
        (not @repositoryspecific or @octo-built-in-feed) and
        (not @applicationspecific or @aspnetcore)
      WISTIA_MEDIA_ID: f925nu08uc
      DISABLE_HIGHLIGHTS: true
      DISABLE_SCREENSHOTS: true
      MOVE_TO_MOUSE_CUSROR: true
      MOUSE_VERTICAL_OFFSET: 74
      SCREENSHOT_BUCKET: octopus-guides-screenshots
      STHREE_SCREENSHOT_ENABLED: true
      GIT_URL: https://github.com/OctopusSamples/RandomQuotes.git
      NUGET_PATH:
      VIDEO_FILE_NAME: aspnetcore-teamcity-octopus-builtin-feed.mp4
      SCREENSHOT_PATH:
    steps:
      - uses: actions/checkout@v2


      - name: Set screen resolution
        shell: powershell
        run: ./scripts/windows/set-resolution.ps1

      - name: Disable Windows Defender
        shell: powershell
        run: reg add 'HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Real-Time Protection' /v DisableRealtimeMonitoring /t REG_DWORD /d 1

      - name: Free some space
        shell: powershell
        run: ./scripts/windows/free-space.ps1

      - name: Execute puppet
        shell: powershell
        run: ./install.ps1 -Scripts sqlserverexpress.pp,utilities.pp,dotnetutilities.pp,teamcity.pp,octopus.pp,iis.pp,sleep.pp,teamcitywait.pp

      - name: Create API key
        shell: powershell
        run: ./scripts/windows/create-apikey.ps1

      - name: Create API key for tests
        shell: powershell
        run: '& "C:\Program Files\Puppet Labs\Puppet\bin\puppet.bat" apply puppet\windows\octopus-api-key.pp --disable_warnings=deprecations'

      - name: Initial Team City Configuration
        shell: powershell
        run: ./scripts/windows/teamcity-setup.ps1

      - name: Create Teamcity Project
        shell: powershell
        run: ./scripts/windows/teamcity-create-project.ps1

      - name: Create the Octopus Environments
        shell: powershell
        run: ./scripts/windows/create-environments.ps1

      - name: Add tentacle
        shell: powershell
        run: '& "C:\Program Files\Puppet Labs\Puppet\bin\puppet.bat" apply puppet\windows\tentacle.pp --disable_warnings=deprecations'

      - name: Create Octopus Project
        shell: powershell
        run: ./scripts/windows/create-octopusaspnetproject.ps1

      - name: Open Random Quotes
        shell: powershell
        run: ./scripts/windows/open-iisdevapp.ps1

      - name: Add a deployment step
        shell: powershell
        run: ./scripts/windows/teamcity-create-deployment.ps1

      - name: Add a lifecycle
        shell: powershell
        run: ./scripts/windows/create-lifecycle.ps1

      - name: Open Random Quotes in the test environment
        shell: powershell
        run: ./scripts/windows/open-iistestapp.ps1

      - name: Add manual intervention
        shell: powershell
        run: ./scripts/windows/add-manualintervention.ps1

      - name: Add email notification
        shell: powershell
        run: ./scripts/windows/add-notification.ps1

      - name: Add users and team
        shell: powershell
        run: ./scripts/windows/create-usersandteams.ps1

      - name: View internal deployer dashboard
        shell: powershell
        run: ./scripts/windows/view-internaldeployerdashboard.ps1

      - name: View production deployer dashboard
        shell: powershell
        run: ./scripts/windows/view-productiondeployerdashboard.ps1

      - name: View audit logs
        shell: powershell
        run: ./scripts/windows/view-auditlogs.ps1

      - name: Process video
        #if: always()
        shell: powershell
        run: ./scripts/windows/process-video.ps1

      - name: Upload video
        #if: always()
        shell: powershell
        run: ./scripts/windows/upload-video.ps1

      - name: Create badge
        shell: powershell
        run: ./scripts/windows/create-badge.ps1

      - name: Replace Wistia Video
        shell: powershell
        run: ./scripts/windows/replace-wistia-video.ps1